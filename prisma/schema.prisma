// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  // opzionale: se vuoi usare shadow DB separato in prod
  // shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id       Int      @id @default(autoincrement())
  username String   @unique
  password String
  isAdmin  Boolean  @default(false)
  trades   Trade[]
}

model Trade {
  id                  Int       @id @default(autoincrement())
  // TICKER SOLO (es. "BTC"). La coppia visiva Ã¨ gestita dal backend/worker (quote = USDT)
  symbol              String
  quote               String    @default("USDT") // per visualizzazione coppia es. BTC/USDT
  side                String    @default("LONG") // "LONG" | "SHORT"

  entry_price         Float     @default(0)
  tp_price            Float     @default(0)
  sl_price            Float     @default(0)
  quantity            Float     @default(0)

  status              String    @default("pending") // "pending" | "open" | "closed"
  opened_at           DateTime? // timestamp scelto dall'utente o quando viene importato
  entry_hit_at        DateTime? // quando la entry viene toccata (diventa OPEN)
  closed_at           DateTime? // quando raggiunge TP/SL o chiusa manualmente

  post_url            String?   // link call originale

  pnl_unrealized_pct  Float     @default(0) // % non realizzata per trade OPEN
  pnl_realized_pct    Float     @default(0) // % realizzata quando CLOSED

  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt

  user     User      @relation(fields: [userId], references: [id])
  userId   Int

  @@index([status, symbol])
  @@index([createdAt])
}
